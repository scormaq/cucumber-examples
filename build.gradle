buildscript {
    ext {
        allure2_version = "2.13.7"
        aspectjweaver_version = "1.9.6"
        cucumber_version = "6.9.1"
        spring_version = "5.3.1"
        jackson_version = "2.12.0"
        lombok_version = "1.18.16"
        log4j2_version = "2.14.0"
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'io.freefair.lombok' version '5.3.0'
    id 'io.qameta.allure' version '2.8.1'
}

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
}

group 'com.github.scormaq'
version '1.0-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_11

dependencies {

    // Cucumber
    implementation "io.cucumber:cucumber-java:$cucumber_version"
    implementation "io.cucumber:cucumber-spring:$cucumber_version"

    // Spring & DI
    implementation "org.springframework:spring-context-support:$spring_version"
    implementation "org.springframework:spring-test:$spring_version"

    // Allure
    implementation "io.qameta.allure:allure-junit5:$allure2_version"
    implementation "io.qameta.allure:allure-rest-assured:$allure2_version"
    implementation "io.qameta.allure:allure-cucumber6-jvm:$allure2_version"
    implementation "io.qameta.allure:allure-selenide:$allure2_version"
    implementation "org.aspectj:aspectjweaver:$aspectjweaver_version"

    // JSON, CSV, jackson
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"
    implementation "com.github.wnameless:json-flattener:0.7.1"

    // java & lombok
    implementation "javax.annotation:javax.annotation-api:1.3.2"
    implementation "org.projectlombok:lombok:$lombok_version"
    annotationProcessor "org.projectlombok:lombok:$lombok_version"

    // logging
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4j2_version"
    implementation "org.apache.logging.log4j:log4j-core:$log4j2_version"
    implementation "org.apache.logging.log4j:log4j-jul:$log4j2_version"

    // utils
    implementation "org.apache.commons:commons-lang3:3.11"
    implementation "commons-beanutils:commons-beanutils:1.9.4"
}

allure {
    version = allure2_version
    downloadLinkFormat = 'https://dl.bintray.com/qameta/maven/io/qameta/allure/allure-commandline/%s/allure-commandline-%<s.zip'
    useJUnit5 {
        version = allure2_version
    }
    aspectjweaver = true
    allureJavaVersion = allure2_version
}

// reusable configuration for any JavaExec/Test task
def systemPropertySetup = {
    systemProperties System.getProperties()
    systemProperty 'log4j2.console.level', 'INFO'

    group = 'My Awesome Automation Test Framework'
    jvmArgs += ['--add-opens', 'java.base/java.lang=ALL-UNNAMED']
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

def findAspectjAgent = {
    project.configurations.compileClasspath.resolvedConfiguration.firstLevelModuleDependencies
            .collect { it.moduleArtifacts[0]?.file }
            .find { it.name.contains("aspectjweaver-$aspectjweaver_version") }
}

task runCucumberTests(type: JavaExec) {
    configure systemPropertySetup
    description = 'Runs Cucumber tests'

    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
    main = "io.cucumber.core.cli.Main"
    jvmArgs = ["-javaagent:\"${findAspectjAgent()}\""]
    args = [
            '--plugin', 'pretty',
            '--plugin', 'io.qameta.allure.cucumber6jvm.AllureCucumber6Jvm',
            '--glue', 'com.github.scormaq.cucumber',

            'src/test/resources']
    setIgnoreExitValue(true)
}